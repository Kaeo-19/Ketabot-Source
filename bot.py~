import discord
from discord.ext import commands
import datetime
import logging
import json

import requests
from bs4 import BeautifulSoup


bot = commands.Bot(command_prefix='>', description="This is a Helper Bot")
token = ""


#
# Bot command sections
#

<<<<<<< HEAD
@bot.command(help="Displays the basic server information, such as Age, region, and ID", aliases=["i"])
async def info(ctx):
    #await bot.send_typing()

    #Generate the rich format response with server information
    embed = discord.Embed(title=f"{ctx.guild.name}", description="Hail satan", timestamp=datetime.datetime.utcnow(), color=discord.Color.blue())
    embed.add_field(name="Server created at", value=f"{ctx.guild.created_at}")
    embed.add_field(name="Server Owner", value=f"{ctx.guild.owner}")
    embed.add_field(name="Server Region", value=f"{ctx.guild.region}")
    embed.add_field(name="Server ID", value=f"{ctx.guild.id}")
    embed.set_thumbnail(url="https://pluralsight.imgix.net/paths/python-7be70baaac.png")
    
    await ctx.send(embed=embed)
        
@bot.command()
async def ws(ctx,query1):
    """
    Usage: wikisearch [ Query ]
    """
    resp = requests.get("https://en.wikipedia.org/wiki/" + query1
                        .capitalize())
    html = BeautifulSoup(resp.text, 'html.parser')
    paragraphs = html.select('p')
    text = ''.join([para.text for para in paragraphs[0:4]])
    embed= discord.Embed(title="Query", description=str(text))
    embed.add_field(name="link", value = str(resp), timestamp=datetime.datetime.utcnow(), color=discord.Color.blue())
    await ctx.send(embed=embed)
=======
#@bot.command()
#async def drug(ctx, *, drug_name):

@bot.command(help="Displays the basic server information, such as Age, region, and ID", aliases=["i"])
async def info(ctx):
    async with ctx.typing():
        embed = discord.Embed(title=f"{ctx.guild.name}", description="Hail satan", timestamp=datetime.datetime.utcnow(), color=discord.Color.blue())
        embed.add_field(name="Server created at", value=f"{ctx.guild.created_at}")
        embed.add_field(name="Server Owner", value=f"{ctx.guild.owner}")
        embed.add_field(name="Server Region", value=f"{ctx.guild.region}")
        embed.add_field(name="Server ID", value=f"{ctx.guild.id}")
        # embed.set_thumbnail(url=f"{ctx.guild.icon}")
        embed.set_thumbnail(url="https://pluralsight.imgix.net/paths/python-7be70baaac.png")
        await ctx.send(embed=embed)

@bot.command()
async def ws(ctx,query1):

    async with ctx.send(embed=embed):
        resp = requests.get("https://en.wikipedia.org/wiki/" + query1
                            .capitalize())
        html = BeautifulSoup(resp.text, 'html.parser')
        paragraphs = html.select('p')
        text = ''.join([para.text for para in paragraphs[0:4]])
        embed= discord.Embed(title="Query", description=str(text))
    #    embed.add_field(name="link", value = str(resp), timestamp=datetime.datetime.utcnow(), color=discord.Color.blue())
>>>>>>> origin/main
@bot.command()
async def tests(ctx):
    """
    Gives you a list of online psyche tests
    """
    psyche_tests = {
    "https://openpsychometrics.org/tests/SD3/",
    "htps://openpsychometrics.org/tests/LSRP.php",
    "https://www.truity.com/test/big-five-personality-test",
    "https://www.16personalities.com/free-personality-test",
    "https://openpsychometrics.org/tests/SD3/"
    }

    #Convert the array to string, each link seperated on a newline
    outputb = '\n'.join(psyche_tests)
    await ctx.typing()
    embed = discord.Embed(title="Psyche Tests", description="{}".format(outputb), timestamp=datetime.datetime.utcnow(), color=discord.Color.blue())
    embed.add_field(name="disclaimer", value = "These should not be used as the formal evaluation tests@ These are simply online reveiw material at best,")
    await ctx.send(embed=embed)

"""
async def role_add():
    ""
    Adds role to player
    ""
    return "NA"
"""


async def coin_flip(ctx):
    """
    Usage: cf
    Pseudorandom coin flip generator
    """
    #Use pythons pseudorandom number generator to pick between -1 (tails) and 1 (heads)
    coin = randint(0, 1)
    if coin == 0:
        await ctx.send(embed=discord.Embed(title="Coin Flipper", description="f{ctx.message.author} flipped tails", timestamp=datetime.datetime.utcnow(), color=discord.Color.red()))
    else:
        await ctx.send(embed=discord.Embed(title="Coin Flipper", description="f{ctx.message.author} flipped heads", timestamp=datetime.datetime.utcnow(), color=discord.Color.red()))


async def pfp():
    return "NA"

#async def roles():

#async def image():

#async def wdef():


##########
#Bot events
##########

#Prints discord messages to console and logs them.
"""
@bot.event <-- Doesn't work with bot.command() for some reason.
async def on_message():

    Logs/displays messages from discord to the termninal

"""

@bot.event
async def on_ready():
    await bot.change_presence(status=discord.Status.dnd, activity=discord.Game("⛥ h̷̛̛̙̱̼͍̲͓͙͓̬̣͇̦͎͙͕̄̄̋͌̿͗̊͌̀̉͆̿̊͂̇̀̕̕̚̚͜͜ȩ̵̧̲̩̱̯͈̠̫̲̹͖̱̮͖͍̩̜̦̹̣̱͕̣̬̼̝͎͍͙̞̭̮̙̹͇̩͍̥̫͔̟̖̣̲̣͙̙͈̭͕̟̭̜̗͍̻̬̣̈́͗͂̆̈́̒̐̋́̐̿̔̍̉̋̈́̔͆̀̈̈́̐́͘̚͘̕͜͜͜͠͝ͅḷ̶̨̢̢̢̨̢̨̡̛̛̛̛͎̜̼̲̼̥̘̗̫͕͖͈̺͇̲̭̟͚̯̪̯̤͇͙͙̦̳̻͕͕̤̩̬͎̥̲̪̗͔̜̟͕̒̈́͗͑̽̾̃̌̌̇̌̓̓̇̓̎̑͌̓̓̽͐̎̑̃͂̊͑̍̐͂̑̽̑̋̎͛͋͊͆͂̎͆̈̌̚̕͜͜͝͠͝͝͝l̷̢̧̧̛̛̞̮̝̖̺̩̗̦̦͔̩̼͈̳̜̰̥̫͖̞͓̏̉́͗͒̇̀̉̋̉̀̎̐̉̎̅̉͋̉͊́̂̉̋̈́͑̉̓̍͘͝͠ ⛥"), afk=False)

"""
    log = True
    if log is True:
        logging.debug("Disable logging in the configuration file to remove discord message logging/")
        logging.basicConfig(format='[Ketolog]' + '[' + '%(asctime)s' + ']' + ' %(message)s', datefmt='%m/%d/%Y %I:%M:%S %p', level=logging.DEBUG)
    else:
        print("Chat logging is disabled:")
"""
bot.run(token)
